spring.application.name=blocking-list-populator

#DB configuration POSTGRESQL
logging.level.com=trace
spring.cloud.config.enabled=false

spring.datasource.username=sa
spring.datasource.password=password
spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.password=${DB_PASSWORD}
#spring.datasource.username=${DB_LOGIN}
#spring.datasource.url=jdbc:postgresql://accessanalyzer-accessanalyzerproject.c.aivencloud.com:16197/defaultdb?sslmode=require

#Hibernate configuration
#spring.jpa.hibernate.ddl-auto=create not recommend to use in prod cant be a problem with data consistent
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#Kafka
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.bootstrap-servers=pkc-4j8dq.southeastasia.azure.confluent.cloud:9092
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_USERNAME}' password='${KAFKA_PASSWORD}';
spring.kafka.properties.security.protocol=SASL_SSL

spring.cloud.stream.bindings.blockingListPopulatorConsumer-in-0.destination=attack-attempt
spring.cloud.stream.bindings.blockingListPopulatorConsumer-in-0.group=populator-1-group
